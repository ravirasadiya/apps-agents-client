import SettlementsTable from "@/component/Settlements/SettlementsTable";
import DateAndSelect, { Filters } from "@/component/dashboard/DateAndSelect";
import Layout from "@/component/layouts/Layout";
import { EndpointUrl, endpointUrls, getRecords } from "@/helper";
import { currentDate } from "@/utils/get-date";
import { Box, Button } from "@mui/material";
import Dialog from "@mui/material/Dialog";
import FormControl from "@mui/material/FormControl";
import MenuItem from "@mui/material/MenuItem";
import Select, { SelectChangeEvent } from "@mui/material/Select";
import Typography from "@mui/material/Typography";
import "bootstrap-daterangepicker/daterangepicker.css";
import "bootstrap/dist/css/bootstrap.css";
import Head from "next/head";
import { useState } from "react";
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";

interface Currency {
  id: number;
  currency: string;
}

export default function Settlements() {
  const [filters, setFilters] = useState<Filters>();
  const [startDate, setStartDate] = useState<Date | null>(currentDate());
  const [currencyList, setCurrencyList] = useState<Currency[]>([]);
  const [selectedCurrency, setSelectedCurrency] = useState<string>('');

  const handleChange = (event: SelectChangeEvent) => {
    // no data
  };

  //pop//
  const [open, setOpen] = useState(false);

  const handleClickOpen = () => {
    setOpen(true);
    getCurrencyList();
  };

  const getCurrencyList = () => {
    getRecords(endpointUrls[EndpointUrl.AGENT_CURRENCY_LIST]).then((res) => {
      const currencies = res.map((item: Currency) => ({
        ...item,
        id: item.id?.toString(),
      }));
      console.log("currencies", currencies);
      setCurrencyList(currencies);
      setSelectedCurrency(currencies?.[0]?.id);
    });
  };

  const handleClose = () => {
    setOpen(false);
  };

  const onFilterChanged = (filter: Filters) => {
    console.log("on filter update", filter);
    setFilters(filter);
  };

  const handleDateSelected = (date: Date) => {
    console.log(date);
  };

  const handleOnChanged = () => {
    console.log("on date changed");
  };

  return (
    <>
      <Layout>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div>
          <Box>
            <Box className="tabl_p_btn_v2">
              <Typography className="def_had_txt">Settlements</Typography>
              <Button onClick={handleClickOpen}>Add Aettlement</Button>
            </Box>
            <DateAndSelect onFilterChange={onFilterChanged} />
            <SettlementsTable filters={filters} />
          </Box>
        </div>
      </Layout>

      <Dialog
        open={open}
        onClose={handleClose}
        aria-labelledby="alert-dialog-title"
        aria-describedby="alert-dialog-description"
        className="def_modal dilog settlements_modl"
      >
        <Box>
          <Box className="sign">
            <Box className="sign_min">
              <Typography component={"h2"} className="def_h2_hd mrg_colr">
                Add Settlements
              </Typography>

              <Box className="flx_log_input">
                <Box component="form">
                  <Box className="date_min_prnt">
                    <FormControl className="def_selct">
                      <DatePicker
                        className="user-input"
                        selected={startDate}
                        onChange={handleOnChanged}
                        onSelect={handleDateSelected}
                      />
                    </FormControl>
                    <Box className="selct_minbx mrg_sp">
                      <FormControl className="def_selct">
                        <Select
                          value={selectedCurrency}
                          onChange={handleChange}
                          displayEmpty={true}
                          inputProps={{ "aria-label": "Without label" }}
                          className="selct"
                        >
                          {currencyList.map((item) => (
                            <MenuItem value={item.id}>{item.currency}</MenuItem>
                          ))}
                        </Select>
                      </FormControl>
                    </Box>
                  </Box>
                  <Box className="input-box">
                    <input
                      type="text"
                      id="username"
                      name="username"
                      autoComplete="username"
                      placeholder="Amount"
                      autoFocus
                      className="user-input"
                    />
                  </Box>

                  <textarea
                    id="story"
                    name="story"
                    placeholder="Description"
                    className="textarea_def"
                  ></textarea>
                </Box>
                <Button className="def_btn">Add settlement</Button>
              </Box>
            </Box>
          </Box>
        </Box>
      </Dialog>
    </>
  );
}
